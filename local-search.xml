<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Assignment0</title>
    <link href="/2022/05/12/Assignment0/"/>
    <url>/2022/05/12/Assignment0/</url>
    
    <content type="html"><![CDATA[<h1 id="games101作业0">Games101作业0</h1><h2 id="预备知识">预备知识</h2><h4 id="作业中常用c知识">1.作业中常用C++知识</h4><ul><li><p><code>C++</code>三角函数运算使用<strong>弧度</strong>制，且<strong>arccos和arcsin</strong>在math函数中是<strong>acos和asin</strong></p></li><li><p><code>Eigen</code>是课程使用的线性代数运算库，在main.cpp中，eigen 需要额外引入头文件 <eigen3/Eigen/Core></p><p><code>#include &lt;eigen3/Eigen/Core&gt;</code></p></li><li><p>常用运算</p><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Basic Example of cpp</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of cpp \n&quot;</span>;<br><span class="hljs-type">float</span> a = <span class="hljs-number">1.0</span>, b = <span class="hljs-number">2.0</span>;<br>std::cout &lt;&lt; a &lt;&lt; std::endl;<br>std::cout &lt;&lt; a/b &lt;&lt; std::endl;<br>std::cout &lt;&lt; std::<span class="hljs-built_in">sqrt</span>(b) &lt;&lt; std::endl;<br>std::cout &lt;&lt; std::<span class="hljs-built_in">acos</span>(<span class="hljs-number">-1</span>) &lt;&lt; std::endl;<br>std::cout &lt;&lt; std::<span class="hljs-built_in">sin</span>(<span class="hljs-number">30.0</span>/<span class="hljs-number">180.0</span>*<span class="hljs-built_in">acos</span>(<span class="hljs-number">-1</span>)) &lt;&lt; std::endl<br></code></pre></td></tr></table></figure><p>上述代码的作用是在三行分别输出 <em>a</em>, <spanclass="math inline">\(\frac{a}{b}\)</span> ,<spanclass="math inline">\(\sqrt b\)</span> , arccos(<em>−</em>1), sin(30)的计算结果，并安全退出程序。</p></li></ul><h4 id="c中常见错误指南">2.C++中常见错误指南</h4><ul><li><p><code>Compile Error</code>编译错误:认真阅读编译器给出的报错信息，找到报错位置修改代码；如果无法自己解决，建议将报错信息拷贝到Stack Overflow 查找类似情况。</p></li><li><p><code>undefined reference to xxx</code>: 一般是链接错误，检查CMakeLists.txt 中是否包括了需要引入的模块。</p></li><li><p><code>Segmentation Fault</code>:段错误，一般是数组越界、栈空间开销过大等问题导致。</p></li><li><p><code>Bus Error</code>: 总线错误，成因一般与段错误相似。</p></li><li><p><code>Math Error</code>: 一般是除数为 0 导致。</p></li></ul><h4 id="向量和矩阵的基本操作">3.向量和矩阵的基本操作</h4><ul><li>向量:定义一个三维浮点向量并且进行输出、加减、数乘</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Example of vector</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of vector \n&quot;</span>;<br><span class="hljs-comment">// vector definition</span><br><span class="hljs-function">Eigen::Vector3f <span class="hljs-title">v</span><span class="hljs-params">(<span class="hljs-number">1.0f</span>,<span class="hljs-number">2.0f</span>,<span class="hljs-number">3.0f</span>)</span></span>;<br><span class="hljs-function">Eigen::Vector3f <span class="hljs-title">w</span><span class="hljs-params">(<span class="hljs-number">1.0f</span>,<span class="hljs-number">0.0f</span>,<span class="hljs-number">0.0f</span>)</span></span>;<br><span class="hljs-comment">// vector output</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of output \n&quot;</span>;<br>std::cout &lt;&lt; v &lt;&lt; std::endl;<br><span class="hljs-comment">// vector add</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of add \n&quot;</span>;<br>std::cout &lt;&lt; v + w &lt;&lt; std::endl;<br><span class="hljs-comment">// vector scalar multiply</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of scalar multiply \n&quot;</span>;<br>std::cout &lt;&lt; v * <span class="hljs-number">3.0f</span> &lt;&lt; std::endl;<br>std::cout &lt;&lt; <span class="hljs-number">2.0f</span> * v &lt;&lt; std::endl;<br></code></pre></td></tr></table></figure><ul><li>矩阵：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Example of matrix</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of matrix \n&quot;</span>;<br><span class="hljs-comment">// matrix definition</span><br>Eigen::Matrix3f i,j;<br>i &lt;&lt; <span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>, <span class="hljs-number">5.0</span>, <span class="hljs-number">6.0</span>, <span class="hljs-number">7.0</span>, <span class="hljs-number">8.0</span>, <span class="hljs-number">9.0</span>;<br>j &lt;&lt; <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">4.0</span>, <span class="hljs-number">6.0</span>, <span class="hljs-number">5.0</span>, <span class="hljs-number">9.0</span>, <span class="hljs-number">7.0</span>, <span class="hljs-number">8.0</span>;<br><span class="hljs-comment">// matrix output</span><br>std::cout &lt;&lt; <span class="hljs-string">&quot;Example of output \n&quot;</span>;<br>std::cout &lt;&lt; i &lt;&lt; std::endl;<br><span class="hljs-comment">// matrix add i + j</span><br><span class="hljs-comment">// matrix scalar multiply i * 2.0</span><br><span class="hljs-comment">// matrix multiply i * j</span><br><span class="hljs-comment">// matrix multiply vector i * v</span><br></code></pre></td></tr></table></figure><ul><li>在命令行中的运行main.cpp的结果：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++">Example of cpp <br><span class="hljs-number">1</span><br><span class="hljs-number">0.5</span><br><span class="hljs-number">1.41421</span><br><span class="hljs-number">3.14159</span><br><span class="hljs-number">0.5</span><br>Example of vector <br>Example of output <br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br>Example of add <br><span class="hljs-number">2</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br>Example of scalar multiply <br><span class="hljs-number">3</span><br><span class="hljs-number">6</span><br><span class="hljs-number">9</span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">6</span><br>Example of matrix <br>Example of output <br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span><br><span class="hljs-number">7</span> <span class="hljs-number">8</span> <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><h2 id="作业内容">作业内容</h2><h4 id="编译运行"><strong>1.编译运行</strong></h4><p>为方便之后的作业编写，本次作业要求使用 <strong>cmake</strong>进行编译。首先，编写好本次作业的程序 <strong>main.cpp</strong>。然后, 在<strong>main.cpp</strong> 所在目录下，打开终端(命令行)，在作业文件夹<strong>(文件夹必须包含CMakeLists.txt和main.cpp)</strong>右键Openin Terminal即可，依次输入：</p><p>• <code>mkdir build</code>: 创建名为 build 的文件夹。</p><p>• <code>cd build</code>: 移动到 build 文件夹下。</p><p>• <code>cmake ..</code>: 注意其中’..’ 表示上一级目录，若为’.’则表示当前目录。</p><p>• <code>make</code>: 编译程序，错误提示会显示在终端中。</p><p>• <code>./Transformation</code>：若上一步无错误，则可运行程序 (这里的Transformation为可执行文件名，可参照CMakeLists.txt 中修改)。</p><h4 id="作业"><strong>2.作业</strong></h4><p>给定一个点 <em>P</em><strong>=(2,1)</strong>,将该点绕原点先逆时针旋转 45<em>◦</em>，再平移 (1,2),计算出变换后点的坐标（要求用齐次坐标进行计算）。</p><p>思路：在齐次坐标中<em>P</em><strong>=(2,1)</strong>表示为<strong><em>p</em>=(2,1,1)</strong>.旋转是线性变换，旋转加平移是仿射变换，变换矩阵为<span class="math inline">\(M\)</span>= <spanclass="math inline">\(T\cdot R\)</span>，令变换后的坐标为<spanclass="math inline">\(p_1\)</span>,其中<spanclass="math inline">\(R\)</span>为旋转变换矩阵，<spanclass="math inline">\(T\)</span>为平移变换矩阵。 <spanclass="math display">\[p_1 = T\cdot R\cdot p = \begin{pmatrix} 1&amp;0&amp;1\\ 0&amp;1&amp;2\\0&amp;0&amp;1\\ \end{pmatrix}\cdot\begin{pmatrix}cos\frac{\pi}{4}&amp;-sin\frac{\pi}{4}&amp;0\\sin\frac{\pi}{4}&amp;cos\frac{\pi}{4}&amp;0\\0&amp;0&amp;1\\\end{pmatrix}\cdot\begin{pmatrix} 2\\ 1\\ 1\\ \end{pmatrix}\]</span> 代码实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//Assignment.cpp</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;eigen3/Eigen/Core&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;eigen3/Eigen/Dense&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-comment">//声明齐次坐标下的p点</span><br><span class="hljs-function">Eigen::Vector3f <span class="hljs-title">p</span><span class="hljs-params">(<span class="hljs-number">2.0f</span>,<span class="hljs-number">1.0f</span>,<span class="hljs-number">1.0f</span>)</span></span>;<br><span class="hljs-function">Eigen::Vector3f <span class="hljs-title">p1</span><span class="hljs-params">(<span class="hljs-number">0.0f</span>,<span class="hljs-number">0.0f</span>,<span class="hljs-number">0.0f</span>)</span></span>;<br><span class="hljs-comment">//声明旋转矩阵和平移矩阵</span><br>Eigen::Matrix3f T,R;<br>T &lt;&lt; <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>;<br>R &lt;&lt; <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2</span>)/<span class="hljs-number">2</span>, -<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2</span>)/<span class="hljs-number">2</span>, <span class="hljs-number">0.0</span>, <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2</span>)/<span class="hljs-number">2</span>, <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2</span>)/<span class="hljs-number">2</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>;<br>cout &lt;&lt; T &lt;&lt; endl;<br>cout &lt;&lt; R &lt;&lt; endl;<br>p1 = T * R * p;<br><br>cout &lt;&lt; p1 &lt;&lt; endl;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span><br><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span><br> <span class="hljs-number">0.707107</span> <span class="hljs-number">-0.707107</span>         <span class="hljs-number">0</span><br> <span class="hljs-number">0.707107</span>  <span class="hljs-number">0.707107</span>         <span class="hljs-number">0</span><br>        <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">1</span><br><span class="hljs-number">1.70711</span><br><span class="hljs-number">4.12132</span><br>      <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Computer Graphic</category>
      
      <category>Games101</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Computer Graphic</tag>
      
      <tag>Games101</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo和Markdown的基本使用</title>
    <link href="/2022/05/11/Hexo%E5%92%8CMarkdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/05/11/Hexo%E5%92%8CMarkdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1id="简介hexo更新博客步骤和markdown的基本使用">简介：Hexo更新博客步骤和Markdown的基本使用</h1><h2 id="hexo的基本使用">Hexo的基本使用</h2><h4 id="创建新文章">1.创建新文章</h4><p><code>$ hexo new [layout] &lt;title&gt;</code></p><p>可以在命令中指定文章的布局（layout），默认为<code>post</code>，可以通过修改 <code>_config.yml</code> 中的<code>default_layout</code> 参数来指定默认布局,Hexo有三种默认布局：<code>post</code>、<code>page</code> 和<code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到Blog中不同的路径。</p><h4 id="front-matter">2.Front-matter</h4><p>Front-matter 是文件最上方以 <code>---</code>分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2013</span><span class="hljs-string">/7/13</span> <span class="hljs-number">20</span><span class="hljs-string">:46:25</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><colgroup><col style="width: 12%" /><col style="width: 26%" /><col style="width: 61%" /></colgroup><thead><tr class="header"><th style="text-align: left;">参数</th><th style="text-align: left;">描述</th><th style="text-align: left;">默认值</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>layout</code></td><td style="text-align: left;">布局</td><td style="text-align: left;"><ahref="https://hexo.io/zh-cn/docs/configuration#文章"><code>config.default_layout</code></a></td></tr><tr class="even"><td style="text-align: left;"><code>title</code></td><td style="text-align: left;">标题</td><td style="text-align: left;">文章的文件名</td></tr><tr class="odd"><td style="text-align: left;"><code>date</code></td><td style="text-align: left;">建立日期</td><td style="text-align: left;">文件建立日期</td></tr><tr class="even"><td style="text-align: left;"><code>updated</code></td><td style="text-align: left;">更新日期</td><td style="text-align: left;">文件更新日期</td></tr><tr class="odd"><td style="text-align: left;"><code>comments</code></td><td style="text-align: left;">开启文章的评论功能</td><td style="text-align: left;">true</td></tr><tr class="even"><td style="text-align: left;"><code>tags</code></td><td style="text-align: left;">标签（不适用于分页）</td><td style="text-align: left;"></td></tr><tr class="odd"><td style="text-align: left;"><code>categories</code></td><td style="text-align: left;">分类（不适用于分页，使用）</td><td style="text-align: left;"></td></tr></tbody></table><p>其中</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">categories</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Life</span><br></code></pre></td></tr></table></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span><br>  - Diary<br>  - Life<br></code></pre></td></tr></table></figure><p>可以添加多个标签</p><h4 id="发布和部署博客">3.发布和部署博客</h4><p>清除文件：<code>$ hexo clean</code></p><p>文件生成：<code>$ hexo g</code></p><p>部署到github：<code>$ hexo  d</code></p><h4 id="latex数学公式">4.Latex数学公式</h4><h5 id="设置主题配置"><strong>1. 设置主题配置</strong></h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></table></figure><p><code>specific</code>: 建议开启。当为 true 时，只有在文章 <ahref="https://hexo.io/zh-cn/docs/front-matter">Front-matter (opens newwindow)</a>里指定 <code>math: true</code>才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度。</p><p><code>engine</code>: 公式引擎，目前支持 <code>mathjax</code> 或<code>katex</code>。</p><h5 id="更换-markdown-渲染器"><strong>2. 更换 Markdown渲染器</strong></h5><p>由于 Hexo 默认的 Markdown渲染器不支持复杂公式，所以必须更换渲染器。</p><p>先卸载原有渲染器：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm uninstall hexo-renderer-marked <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后根据上方配置不同的 <code>engine</code>，推荐更换如下渲染器：</p><p>mathjax:<code>npm install hexo-renderer-pandoc --save</code><strong>并且还需<ahref="https://github.com/jgm/pandoc/blob/master/INSTALL.md">安装Pandoc(opens new window)</a></strong></p><p>katex:<code>npm install @upupming/hexo-renderer-markdown-it-plus --save</code></p><h5 id="安装完成后执行-hexo-clean"><strong>3. 安装完成后执行<code>hexo clean</code></strong></h5><h2 id="markdown的基本使用">Markdown的基本使用</h2><h4 id="基本操作">1.基本操作</h4><table><thead><tr class="header"><th>操作</th><th>描述</th></tr></thead><tbody><tr class="odd"><td>``<code>| 插入代码块   | |</code></td><td>插入单行代码</td></tr><tr class="even"><td>$</td><td>插入公式</td></tr></tbody></table><h4 id="markdown中写数学公式">2.markdown中写数学公式</h4><table><colgroup><col style="width: 49%" /><col style="width: 50%" /></colgroup><thead><tr class="header"><th>公式或字母</th><th>写法</th></tr></thead><tbody><tr class="odd"><td>希腊字母<em>α</em>和<em>γ</em></td><td>; </td></tr><tr class="even"><td>上下标</td><td>C_n^2</td></tr><tr class="odd"><td>矢量</td><td> </td></tr><tr class="even"><td>未知数符号(A)</td><td></td></tr><tr class="odd"><td><strong>分数(x/y)</strong></td><td></td></tr><tr class="even"><td>分组(10的10次方)</td><td>10^{10}</td></tr><tr class="odd"><td>求和(a1到an的和)</td><td>_{i=1}^n{a_i}</td></tr><tr class="even"><td>极限</td><td>_{x}{x^2}</td></tr><tr class="odd"><td>积分</td><td>_0^</td></tr><tr class="even"><td>开根式</td><td></td></tr><tr class="odd"><td>特殊函数</td><td>x x (A,B,C)</td></tr><tr class="even"><td><strong>矩阵matrix</strong></td><td></td></tr><tr class="odd"><td><img src="https://www.zhihu.com/equation?tex=%5Cpi"alt="[公式]" /></td><td></td></tr></tbody></table><p><ahref="https://www.jianshu.com/p/383e8149136c">详细数学公式使用</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
